{%- from "linux/map.jinja" import network with context %}
{%- set service = salt['pillar.get']('supervisor:server:service:'+service_name) %}
{%- set app = salt['pillar.get']('airflow:server') %}
{%- from "airflow/map.jinja" import server with context %}

{%- if service.name == "airflow" %}

[program:{{ service.name }}]
directory=/srv/airflow
command=/srv/airflow/bin/start-service.sh "airflow webserver"
stdout_logfile=/var/log/airflow/web.log
stderr_logfile=/var/log/airflow/web_error.log
user=airflow
autostart=true
autorestart=true

{% endif %}

{% if service.name == "airflow_scheduler" %}

[program:{{ service.name }}]
directory=/srv/airflow
command=/srv/airflow/bin/start-service.sh "airflow scheduler"
stdout_logfile=/var/log/airflow/scheduler.log 
stderr_logfile=/var/log/airflow/scheduler_error.log
user=airflow
autostart=true
autorestart=true

{% endif %}

{% if service.name == "airflow_worker" %}

[program:{{ service.name }}]
directory=/srv/airflow
command=/srv/airflow/bin/start-service.sh "airflow worker"
stdout_logfile=/var/log/airflow/worker.log
stderr_logfile=/var/log/airflow/worker_error.log
user=airflow
autostart=true
autorestart=true

{% endif %}

{% if service.name == "airflow_flower" %}

[program:{{ service.name }}]
directory=/srv/airflow
command=/srv/airflow/bin/start-service.sh "airflow flower"
stdout_logfile=/var/log/airflow/flower.log
stderr_logfile=/var/log/airflow/flower_error.log
user=airflow
autostart=true
autorestart=true

{% endif %}
